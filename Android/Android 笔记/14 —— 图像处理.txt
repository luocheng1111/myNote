

Bitmap 
----------------------------------------------------------------------------------------------------------------------------------
 ◆ 牛人笔记
     http://blog.csdn.net/zhandoushi1982/article/details/8644431
     http://www.cnblogs.com/feisky/archive/2010/01/10/1643460.html
     图片的一些相关方法 http://www.cnblogs.com/rongxh7/archive/2011/05/09/2041517.html

 ※ 介绍
     Bitmap是Android系统中的图像处理的最重要类之一。用它可以获取图像文件的信息，进行图像的剪切，旋转、缩放等操作
     并可以指定格式保存图像文件。

 ※ Bitmap的生成
    1.使用BitmapFactory实现
      <static> decodeFile(pathName : String, opts : Options); Bitmap
      <static> decodeFile(pathName : String); Bitmap
      <static> decodeResource(res : Resources, id : int, opts : Options); Bitmap
      <static> decodeResource(res : Resources, id : int); Bitmap
    2.BitmapDrawable实现
      ...

 ※ Bitmap的显示
    // 获取位图
    Bitmap bmp=BitmapFactory.decodeResource(res, R.drawable.pic180);
    // 转换为BitmapDrawable对象
    BitmapDrawable bmpDraw=new BitmapDrawable(bmp);
    // 显示位图
    ImageView iv = (ImageView)findViewById(R.id.ImageView02);
    iv.setImageDrawable(bmpDraw);

 ※ Bitmap的截取
    Bitmap bitmap = Bitmap.createBitmap(bmp, 100, 100, 120, 120);
    从bmp的(100, 100)处截取120*120像素区域放到新的Bitmap中

 ※ 缩放一个Bitmap的
    Bitmap bitmap = Bitmap.createScaledBitmap(mSrc, min, min, boolean);  

----------------------------------------------------------------------------------------------------------------------------------


Bitmap类和Drawab的区别
----------------------------------------------------------------------------------------------------------------------------------------
 ※ Bitmap
    称作位图，一般位图的文件格式后缀为bmp，当然编码器也有很多如RGB565、RGB88。 作为一个逐像素的显示
    对象执行效率高，但是缺点也很明显存储效率低。我们理解为一种存储对象比较好
 ※ Drawable
    作为Android平台下通用的图像对象，它可以装载常用格式和图像，比如GIF、PNG、JPG，
    当然也支持BMP，当然还提供一些高级的可视化对象，比如渐变、图像等。

 Bitmap是Drawable，Drawable不一定是Bitmap，就像拇指是指头，但不是所有的指头都是拇指一样、

----------------------------------------------------------------------------------------------------------------------------------------


Bitmap.Config 质量参数比较
----------------------------------------------------------------------------------------------------------------------------------------
 ◆ 牛人笔记
     http://www.cnblogs.com/coding-way/archive/2011/07/26/2117522.html

 ※ 介绍
     ARGB：代表意思是 透明度红色绿色蓝色

     Bitmap.Config ALPHA_8
     Bitmap.Config ARGB_4444 16 每像素占四位
     Bitmap.Config ARGB_8888 32 每像素占八位
     Bitmap.Config RGB_565   16 R占5位 G占6位 B站5位 没有透明度A

    一般情况下我们都是用ARGB8888，但是无可厚非 它也相对的很占内存
    因为一个像素32位 8位一个字节 如果是800*480的图片的话自己算 估计有1M多了

----------------------------------------------------------------------------------------------------------------------------------------



Canvas 画布类
----------------------------------------------------------------------------------------------------------------------------------------
 ◆ 牛人笔记
     Canvas类和Paint类 http://www.2cto.com/kf/201312/263154.html

 ※ 介绍
     Canvas类位于"android.graphics.Canvas"，画布的意思，用于完成在View上的绘图

 ※ 构造函数
     Canvas()：创建一个空的Canvas对象
     Canvas(Bitmap bitmap)：创建一个以bitmap位图为备件的Canvas

 ※ 常用方法
    void drawBitmap(Bitmap bitmap,float left,float top,Paint paint)：在指定坐标绘制位图
    void drawLine(float startX,float startY,float stopX,float stopY,Paint paint)：根据给定的起始点和结束点之间绘制连线
    void drawPoint(float x,float y,Paint paint)：根据给定的坐标，绘制点
    void drawText(String text,int start,int end,Paint paint)：根据给定的坐标，绘制文字
    void drawRect(float left,float top, float right, float bottom, Paint paint); 绘制一个矩形
    void drawCircle(float cx,float cy, float radius, Paint paint); 绘制一个实心圆
    void drawPath(Path path,Paint paint)：根据给定的path，绘制连线，可绘制多边形
    int getHeight()：得到Canvas的高度
    int getWidth()：得到Canvas的宽度

    canvas.drawRoundRect(rect, mRadius, mRadius, paint); 绘制圆角矩形
----------------------------------------------------------------------------------------------------------------------------------------


Paint 画笔
----------------------------------------------------------------------------------------------------------------------------------------
 ◆ 牛人笔记
     Canvas类和Paint类 http://www.2cto.com/kf/201312/263154.html

 ※ 介绍
     Paint类位于"android.graphics.Paint"，画笔的意思，用于设置绘图风格，包括画笔颜色，粗细，填充风格等.

 ※ 常用方法
    setARGB(int a,int r,int g,int b)：设置ARGB颜色
    setColor(int color)：设置颜色
    setAlpha(int a)：设置透明度
    setPathEffect(PathEffect effect)：设置绘制路径时的路径效果
    setShader(Shader shader)：设置Paint的填充效果
    setAntiAlias(boolean aa)：设置是否抗锯齿
    setStrokeWidth(float width)：设置Paint的笔触宽度
    setStyle(Paint.Style style)：设置Paint的填充风格
    setTextSize(float textSize)：设置绘制文本时的文字大小

    paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN)); 设置两个图交集时呈现的样子，其中有16
    种效果，具体看 http://blog.csdn.net/lmj623565791/article/details/24555655

----------------------------------------------------------------------------------------------------------------------------------------




Android 完美实现图片圆角和圆形（对实现进行分析）
http://blog.csdn.net/lmj623565791/article/details/24555655



