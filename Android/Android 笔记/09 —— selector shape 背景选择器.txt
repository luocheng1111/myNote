
Selector 背景选择器
----------------------------------------------------------------------------------------------------------------------------------------

 ※ 介绍
    通过设置selector.xml可使得控件在不同操作下（默认、点击、焦点等）的显示不同样式
    (比如，一个按钮，选中时，按钮变成另外一张图片)


 ※ 示例(创建xml文件，位置：drawable/xxx.xml)
    1.设置'图片'背景
    <?xml version="1.0" encoding="utf-8"?>  
    <selector xmlns:android="http://schemas.android.com/apk/res/android">  
	<item android:state_selected="true" android:drawable="@drawable/pic2" />  
	<item android:state_focused="true" android:drawable="@drawable/pic2" />  
	<item android:state_pressed="true" android:drawable="@drawable/pic2" />  
	<item android:drawable="@drawable/pic1" /> <!-- 注：此条写后面，否则会失去选择器效果-->   
    </selector> 
    
    2.设置'颜色'背景
    <?xml version="1.0" encoding="utf-8"?>  
    <selector xmlns:android="http://schemas.android.com/apk/res/android">  
	<item android:state_checked="true" android:drawable="@color/colorPrimary" />
	<item android:drawable="@color/garyTrans" />
    </selector> 


    3.设置'字体'颜色
    <?xml version="1.0" encoding="utf-8"?>  
    <selector xmlns:android="http://schemas.android.com/apk/res/android">
	<item android:state_checked="true" android:color="@color/white" />
	<item android:color="@color/black" /> 
    </selector>
    

 ※ 属性说明
      android:state_pressed  点击状态
      android:state_selected 选中状态（选中=获得焦点+点击）
      android:state_focused  取得焦点状态，比如用户选择了一个文本框
 
      android:state_enableed 是否可以被点击(多用于Button不能被点击时的状态)
      android:state_checked  是否被选中 (多用于RadioGroup按钮切换)

      如果引用的是颜色，则为android:color="@color/black"
      

 ※ 如何使用
    XML文件中：
    android:background="@drawable/button_selector" 
    
    代码中：
    Drawable drawable = getResources().getDrawable(R.drawable.xxx);
    listView.setSelector(drawable);此时可能会出现列表黑的情况，
    加上android:cacheColorHint="@android:color/transparent"使其透明


 ◆ 牛人笔记
     https://www.cnblogs.com/zhangxia/p/5101486.html

----------------------------------------------------------------------------------------------------------------------------------------


selector中shape的使用
----------------------------------------------------------------------------------------------------------------------------------------

 ※ 介绍
    shape用于自己绘制简单的图形或图片，也可以配合选择器使用


 ※ 示例(创建xml文件，位置：drawable/xxx.xml)
    <?xml version="1.0" encoding="utf-8"?>
    <shape xmlns:android="http://schemas.android.com/apk/res/android" >
        <!-- 实心 -->
        <solid android:color="#ff9d77"/> 

        <!-- 渐变 -->
        <gradient
            android:startColor="#ff8c00" 
            android:endColor="#FFFFFF"
            android:angle="270" /> 

        <!-- 描边 -->
        <stroke
            android:width="2dp"
            android:color="#dcdcdc" />

        <!-- 圆角 -->
        <corners
            android:radius="2dp" />

        <padding
            android:left="10dp"
            android:top="10dp"
            android:right="10dp"
            android:bottom="10dp" />
    </shape>


 ※ 属性说明
    solid 实心(填充)
     android:color 指定填充的颜色

    gradient 渐变
     android:startColor和android:endColor分别为起始和结束颜色，
     android:angle是渐变角度，必须为45的整数倍
     android:type="linear" 默认为线性渐变，可以指定渐变为径向渐变，type="radial",需指定半径android:gradientRadius="50"
  
    stroke 描边
     android:width="2dp" 描边的宽度
     android:color="red" 描边的颜色
     <!-- 虚线 -->
     android:dashWidth="5dp" 表示"-"这样一个横线的宽度
     android:dashGap="3dp"   表示虚线之间隔开的距离

    corners: 圆角
     android:radius="5dp"  角的弧度，值越大角越圆
     <!-- 也可以单独绘制 -->
     android:topRightRadius="20dp"    右上角
     android:bottomLeftRadius="20dp"    右下角
     android:topLeftRadius="1dp"    左上角
     android:bottomRightRadius="0dp"    左下角


 ※ 注意点：
    3.0以上，如果想绘制一条虚线，则需要关闭硬件加速，
    在activity中加 android:hardwareAccelerated="false",且控件高度须大于线width


 ◆ 牛人笔记
     http://kofi1122.blog.51cto.com/2815761/521605
     http://www.cnblogs.com/sunzn/archive/2013/01/22/2871943.html


----------------------------------------------------------------------------------------------------------------------------------------


selector和shape 混合使用
----------------------------------------------------------------------------------------------------------------------------------------
<selector
    xmlns:android="http://schemas.android.com/apk/res/android">
    <item android:state_pressed="true" >
        <shape>
            <!-- 渐变 -->
            <gradient
                android:startColor="#ff8c00"
                android:endColor="#FFFFFF"
                android:type="radial"
                android:gradientRadius="50" />
            <!-- 描边 -->
            <stroke
                android:width="2dp"
                android:color="#dcdcdc"
                android:dashWidth="5dp" 
                android:dashGap="3dp" />
            <!-- 圆角 -->
            <corners
                android:radius="2dp" />
        </shape>
    </item>

    <item>       
        <shape>
            <solid android:color="#ff9d77"/>
            <stroke
                android:width="2dp"
                android:color="#fad3cf" />
            <corners 
                android:topRightRadius="5dp"
                android:bottomLeftRadius="5dp"
                android:topLeftRadius="0dp"
                android:bottomRightRadius="0dp"
            />
        </shape>
    </item>
</selector>
----------------------------------------------------------------------------------------------------------------------------------



layer-list 
----------------------------------------------------------------------------------------------------------------------------------------
 ◆ 牛人笔记
     http://blog.csdn.net/cwx01perfect/article/details/7739005
     http://blog.csdn.net/brokge/article/details/9713041

 ※ 简介
    将多个图片按照顺序层叠起来

 ※ 设置(创建xml文件，位置：drawable/xxx.xml)
    <?xml version="1.0" encoding="utf-8"?>  
    <layer-list  xmlns:android="http://schemas.android.com/apk/res/android">   
     <item android:id="@+id/user_faceback_drawable"    android:drawable="@drawable/faceback" />    
     <item android:id="@+id/user_face_drawable"     android:drawable="@drawable/h001"     
           android:left="10.0dip"   
           android:top="18.0dip"   
           android:right="25.0dip"   
           android:bottom="35.0dip" />    
    </layer-list>   

    属性解释：
      android:top 第二张与第一张其实是重叠在一起的，top值代表paddingTop
     

----------------------------------------------------------------------------------------------------------------------------------------


selector和shape、layer-list 混合使用
----------------------------------------------------------------------------------------------------------------------------------------
<selector xmlns:android="http://schemas.android.com/apk/res/android">
    <item android:state_checked="true">
        <shape>
            <corners android:bottomLeftRadius="5dp" android:topLeftRadius="5dp" />

            <solid android:color="@color/bg_chartview" />
        </shape>
    </item>
    <item android:state_checked="false">
        <layer-list>
            <item><shape>
                    <corners android:bottomLeftRadius="5dp" android:topLeftRadius="5dp" />

                    <solid android:color="@color/bg_chartview" />
                </shape>      
             </item>
            <item android:bottom="1dp" android:left="1dp" android:right="1dp" android:top="1dp">
	    <shape>
                    <corners android:bottomLeftRadius="5dp" android:topLeftRadius="5dp" />

                    <solid android:color="@color/white" />
                </shape>
	    </item>
        </layer-list>
    </item>

</selector>




----------------------------------------------------------------------------------------------------------------------------------------