

SmartRefreshLayout
----------------------------------------------------------------------------------------------------------------------------------------

 ※ 介绍
    强大的第三方下拉刷新、上拉加载库，
    支持下拉刷新、上拉加载、二级刷新、淘宝二楼、RefreshLayout、OverScroll，Android智能下拉刷新框架，
    支持越界回弹、越界拖动，
    支持头部吸附效果
    具有极强的扩展性，集成了几十种炫酷的Header和 Footer

    博客：https://segmentfault.com/a/1190000010066071
    GitHub： https://github.com/scwang90/SmartRefreshLayout
    属性文档：https://github.com/scwang90/SmartRefreshLayout/blob/master/art/md_property.md



※ 简单使用
    1).通过gradle的方式导入
      compile 'com.android.support:appcompat-v7:25.3.1'//版本 23以上（必须）
      compile 'com.android.support:design:25.3.1'//版本随意（非必须，引用可以解决无法预览问题）

      compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-22'
      compile 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-22'//没有使用特殊Header，可以不加这行


    2).在XML中添加 SmartRefreshLayout
       <com.scwang.smartrefresh.layout.SmartRefreshLayout
          android:id="@+id/refreshLayout"
          android:layout_width="match_parent"
          android:layout_height="match_parent">

          <android.support.v7.widget.RecyclerView
            android:id="@+id/recyclerview"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:overScrollMode="never" />

       </com.scwang.smartrefresh.layout.SmartRefreshLayout>

    3).在代码中使用
       SmartRefreshLayout refreshLayout = view.findViewById(R.id.refreshLayout);
       //刷新的监听事件
       refreshLayout.setOnRefreshListener(new OnRefreshListener() {
            @Override
            public void onRefresh(@NonNull RefreshLayout refreshLayout) {
                //请求数据
                refreshLayout.finishRefresh();  //刷新完成
            }
       });
       //加载的监听事件
       refreshLayout.setOnLoadMoreListener(new OnLoadMoreListener() {
            @Override
            public void onLoadMore(@NonNull RefreshLayout refreshLayout) {
                  refreshLayout.finishLoadMore();      //加载完成
                  refreshLayout.finishLoadMoreWithNoMoreData();  //全部加载完成,没有数据了调用此方法
            }
       });

    4).说明
       1.默认写法自带下拉刷新功能 下拉的动画为5个点跟随滑动延展开，刷新时的动画的类似电影的圆圈倒计时
       2.默认没有上拉加载功能,但如果加了上拉加载监听,则此时就有了上拉加载功能 动画是3个固定位置的点轮流变大


※ 常用方法
   显示刷新动画且刷新数据
   refreshLayout.autoRefresh(); //自动刷新
   refreshLayout.autoLoadMore(); //自动加载更多

   不显示刷新动画但刷新数据
   refreshLayout.setEnableLoadMore(false); //隐藏加载,不使用底部加载
   refreshLayout.setEnableRefresh(false); //不使用刷新,隐藏刷新

   刷新完成和加载完成分为如下几种情况
   refreshLayout.finishRefresh();  //刷新完成
   refreshLayout.finishRefresh(int delayed);   //刷新完成, 参数delayed 设置延时
   refreshLayout.finishLoadMore();      //加载完成
   refreshLayout.finishLoadMore(int delayed); //加载完成, 参数delayed 设置延时

   这两个方法是在加载失败时调用的
   refreshLayout.finishRefresh(false);//结束刷新（刷新失败）
   refreshLayout.finishLoadMore(false); //结束加载（加载失败）
   refreshLayout.finishLoadMoreWithNoMoreData(); //全部加载完成,没有更多数据了调用此方法 加载更多变成对应的样式
   refreshLayout.setNoMoreData(false); //恢复没有更多数据的原始状态



※ 设置下拉刷新、上拉加载的样式
  说明：有3种方式设置 全局指定、XML指定、代码指定 默认的下拉刷新样式是贝塞尔雷达 上拉样式是三个点依次方法

  XML指定：
  <com.scwang.smartrefresh.layout.SmartRefreshLayout>
      <!--指定头部样式 通过此类的引用修改 ClassicsHeader为经典经典样式 -->
      <com.scwang.smartrefresh.layout.header.ClassicsHeader
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:srlClassicsSpinnerStyle="FixedBehind"/>
      <!--中间内容-->
      <TextView />
      <!--指定尾部样式 ClassicsFooter为经典经典样式-->
      <com.scwang.smartrefresh.layout.footer.ClassicsFooter
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:srlClassicsSpinnerStyle="FixedBehind"/>
  </com.scwang.smartrefresh.layout.SmartRefreshLayout>

  代码指定：
  RefreshLayout refreshLayout = findViewById(R.id.refreshLayout);
  //设置 Header 为 Material风格
  refreshLayout.setRefreshHeader(new MaterialHeader(this).setShowBezierWave(true));
  //设置 Footer 为 球脉冲
  refreshLayout.setRefreshFooter(new BallPulseFooter(this).setSpinnerStyle(SpinnerStyle.Scale));



※ 回弹效果-纯滚动模式
  1)上下都可以回弹
    只需要在SmartRefreshLayout中加上这一行就行了
    app:srlEnablePureScrollMode="true" //是否开启纯滚动模式（默认false-开启时只支持一个子视图）

  2)仅头部可以回弹
    RefreshLayout refreshLayout = root.findViewById(R.id.refreshLayout);
    refreshLayout.setEnablePureScrollMode(true);
    refreshLayout.setEnableLoadMore(false);
    refreshLayout.setDragRate(0.75f); //显示拖动高度/真实拖动高度（默认0.5，阻尼效果）
    也可以在xml中设置

  3)仅尾部可以回弹
    RefreshLayout refreshLayout = root.findViewById(R.id.refreshLayout);
    refreshLayout.setEnablePureScrollMode(true);
    refreshLayout.setEnableRefresh(false);
    refreshLayout.setEnableLoadMore(true);
    也可以在xml中设置


※ 顶部吸附效果(代码会自动识别吸附部分和可滚动的部分)
  <SmartRefreshLayout>
    <LinearLayout
        android:orientation="vertical">
        <!-- 滑动时TextView会吸附到顶部 -->
        <TextView
            android:layout_width="match_parent"
            android:layout_height="100dp"
            android:gravity="center"
            android:text="我就是boos要求加上的广告条啦"/>
        <ListView/>
    </LinearLayout>
  </SmartRefreshLayout>



※ 经典头部及经典样式的修改
  <com.scwang.smartrefresh.layout.header.ClassicsHeader />

  //设置变换样式：Translate(平行移动)、Scale（拉伸形变）、FixedBehind（固定在背后）
  mClassicsHeader.setSpinnerStyle(SpinnerStyle.FixedBehind);

  //显示/隐藏时间
  mClassicsHeader.setEnableLastTime(true/false);

  //修改刷新时的旋转图标
  <com.scwang.smartrefresh.layout.header.ClassicsHeader
            ..
            app:srlDrawableProgress="@drawable/ic_progress_puzzle"/>





※ 参考
  主要参考官方的Demo



----------------------------------------------------------------------------------------------------------------------------------------


