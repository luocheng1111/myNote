

初识目前市场上的混合开发模式
----------------------------------------------------------------------------------------------------------------------------------------

 ※ 介绍
     目前应用主流的开发模式大致有三种：Native App、Web App、Hybrid App

 ※ Native App 原生开发模式
     即传统的原生App开发模式，Android基于java/kotlin, IOS基于oc/swift.  体验效果最好，但开发成本大，效率相对来说更低，更新也相对其他方式更慢

 ※ Web App
     网页的样式用App的形式和样子去展示和交互，App仅限于在浏览器中运行，局限性很大，比如很多手机的特性无法访问，比如联系人、推送通知等。

 ※ Hybrid App 混合开发模式
     大致有三小类
     1.以WebView为主体的混合开发，所有的界面都使用H5和JS来编写，最后展示在原生控件WebView上面，理论上来说，这应该是最佳的一种模式，但由于webview自身的限制，如果渲染比较复杂的界面，会有很大的性能损耗，
        包括一些内存的问题，而且体验上相比原生逊色不少
     2.半Native半Web开发模式，一些实现要求比较高的界面用原生开发，一些比较通用的、展示类的界面用WebView开发，这种模式开发的App，相比原生，他的可复用性非常高，是一种很优的方案，技术要求：js+html+css3 相关框架：Cordova、Ionic、VasSonic
     3.用前端框架编写界面，最后渲染成原生来展示出来，比如React Native App 和 Weex 和 uni-app 和 Flutter
        RN：Facebook推出的跨平台解决方案，语法为JSX，需要学习JavaScript + React，出现的比较早，技术相对成熟，性能较好，第三方插件丰富，社群活跃并且维护较好，文档完整等 也不怕踩坑
        Weex：阿里开源的一款跨平台移动开发工具，目前托管于apache，支持 Vue 语法和 Rax 语法，需要学习JavaScript + vue，缺点是网上的资料少，社区活跃度不够， 成熟的组件少，存在的BUG相较RN还比较多
        uni-app：DCloud出品，属于国产，内嵌了weex，他是一套可以适用多端的开源框架，可同时生成ios，Android，H5，微信小程序，支付宝小程序，百度小程序等。基于Vue语法，需要学习h5, js+vue+weex，缺点是问世时间比较短，很多地方不完善，坑比较多。
        Flutter：Google推出的跨平台方案，使用了dart+flutter界面库的方式。未来的发展趋势，但现在还在尝鲜阶段。市面上纯用Flutter的应用很少，坑还是很多

        性能：Flutter>(RN ，Weex， uni-app)
        上手难度： uni-app > Weex > RN > Flutter


 ※ 学习
     https://blog.csdn.net/tanglitong/article/details/78677347
     https://www.jianshu.com/p/8e99b4aed464  有介绍Weex
     https://ask.dcloud.net.cn/article/36083

----------------------------------------------------------------------------------------------------------------------------------------


