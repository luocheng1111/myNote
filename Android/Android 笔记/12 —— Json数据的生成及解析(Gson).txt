## 特别说明
***此版本为可成功运行的版本，由于原项目作者已不维护，原项目编译会出错，我就在此项目在原有的基础上修改了一些配置，让其可以运行，方便大家一起学习***

###项目原地址
[http://www.qingcore.com/SimplifyReader/](http://www.qingcore.com/SimplifyReader/)


###简阅

一款基于Google Material Design设计开发的Android客户端，包括新闻简读，图片浏览，视频爽看 ，音乐轻听以及二维码扫描五个子模块。项目采取的是MVP架构开发，由于还是摸索阶段，可能不是很规范。但基本上应该是这么个套路，至少我个人认为是这样的~恩，就是这样的！

###效果图

![image](https://raw.githubusercontent.com/chentao0707/server/master/SimplifyReader/images/all_in_one.jpg)


![image](https://raw.githubusercontent.com/chentao0707/server/master/SimplifyReader/images/project.gif)

![image](https://raw.githubusercontent.com/chentao0707/server/master/SimplifyReader/images/qrcode.gif)

![image](https://raw.githubusercontent.com/chentao0707/server/master/SimplifyReader/images/project_struct.png)

###Demo下载
[火速跳转](https://fir.im/simplifyreader) | [Download-APK](https://raw.githubusercontent.com/chentao0707/server/master/SimplifyReader/apks/app-debug.apk)

![image](https://raw.githubusercontent.com/chentao0707/server/master/SimplifyReader/images/download.png)



SelList 列表选择器
=========

## 效果预览图

![](/gif/listselect.gif)

## 如何使用它

> Step 1.先在 build.gradle(Project:XXXX) 的 repositories 添加::

	allprojects {
		repositories {
			...
			maven { url "https://jitpack.io" }
		}
	}
> Step 2. 然后在 build.gradle(Module:app) 的 dependencies 添加:

	dependencies {
	       compile 'com.github.luocc:listselect:1.0'
	}

    使用方法: 
        FragmentContentActivity.startForResultActivity(this, true, "请选择名称", strList);
    (如果更多需求，可以下载源码然后进行更改)

## 近期更新日志

    v1.0 版本                : 实现了基本功能
    v2.0 版本                : 添加城市列表选择功能 （待实现）



Gson
----------------------------------------------------------------------------------------------------------------------------------
 ◆牛人笔记
     http://stormzhang.github.io/android/2014/05/22/android-gson/

 ※ 介绍
     把Json变成对象、把对象变成Json的一个工具，使用时要导入 Gson包
 
 ※ Json数据的解析，三种基本情况
    1.最简单的json解析
      new Gson().fromJson(Json, Person.class)

    2.Json里面嵌套Json
      new Gson().fromJson(JSON, Person.class);
    
    3.Json数组
      1.解析成数组
      Person[] persons = new Gson().fromJson(Json, Person[].class);
      List<Person> personList = Arrays.asList(persons);

      2.直接解析成List
      List<Person> personList = new Gson().fromJson(Json, new TypeToken<ArrayList<Person>>(){}.getType());
  
  ※ Json数据生成
      new Gson().toJson(persons);

----------------------------------------------------------------------------------------------------------------------------------



Android XML解析
----------------------------------------------------------------------------------------------------------------------------------
 
 网络笔记：
  http://blog.csdn.net/liuhe688/article/details/6415593
  http://www.cnblogs.com/devinzhang/archive/2012/01/16/2323668.html

 介绍：
  在Android中，有三种解析xml的方法，分别为DOM解析、SAX解析、PULL解析
  其中DOM解析会把整个文档内容读入内存之中，在Android内存宝贵的情况下不推荐使用此种解析
  SAX解析是Android推荐的一种方式，具有速度快，占用内存少等优点
  PULL解析是Android源码解析xml采用的方式，相对于sax解析，其优势为可根据判断停止解析 



 DOM解析：
    读取整个文档，然后保存在内存中。（获得节点的方式）
    优点：整个文档读入内存，方便操作：支持修改，删除等多种功能
    缺点：将整个文档读入内存中，在android本来内存不多的情况下，太占内存和cpu
    主要一些方法：
     ...

 SAX解析：
    sax是一解析速度快，占用资源少解析。android极力推荐这种
    缺点：不像dom解析把文档读入内存，数据不是持久的。
    主要一些方法：
      SAXParserFactory.newInstance();
      另一个类要继承DefaultHandler这个类，实现5个方法
      person.setId(Integer.valueOf(attributes.getValue("id")));

 PULL解析：
    sax和pull都是轻量级解析。相比sax解析，pull解析可以根据判断停止解析。（获得事件码的方式）
    主要一些方法：
      XmlPullParser aa =Xml.newPullParser();
      aa.setInput(is,"UTF-8");
      int a =aa.getEventType();
      String name =aa.getName();
      person.setId(Integer.valueOf(xmlPull.getAttributeValue(null, "id")));
      person.setAge(Integer.valueOf(xmlPull.nextText()));
      a = aa.next();


  SAX解析代码：
     

----------------------------------------------------------------------------------------------------------------------------------