

#include 文件包含指令
-------------------------------------------------------------------------------------------------------------------

 ※ 介绍
    作用：可以将指定的文件的内容拷贝到写指令的地方
    有两种语法：
    1).#include <文件路径>  #include <studio.h>
    2).#include "文件路径"  #include "1.txt"


 ※ 区别
    #include <1.txt> 
    直接去系统自带的编译器目录中查找，有就直接包含，没有就报错，一般用于使用我们导入系统自带的文件
    #include "1.txt" 先在当前源文件所在目录查找，如果有，直接包含，如果没有，再去系统自带的编译器目录中查找，一般用于使用我们导入自己定义的文件
      


-------------------------------------------------------------------------------------------------------------------




预处理指令
-------------------------------------------------------------------------------------------------------------------

※ 介绍
   预处理指令是以#开头的指令，在编译之前就运行好指令，而不影响运行时的速度
   有三类：
   1). 文件包含指令  #include ...
   2). 宏定义       #define  可以将1段代码定义为1个标识，使用这个标识就可以使用这段代码。
   3). 条件编译指令  #if      只编译指定的C代码为二进制指令。


※ 特点
   1).都是以#号开头。
   2).预处理指令都是在编译之前执行
   3).预处理指令后面都没有分号


※ 预处理指令的原理
   在编译的时候，直接将预处理指令所使用的地方换成对应的代码或值。


-------------------------------------------------------------------------------------------------------------------




#define 宏定义
-------------------------------------------------------------------------------------------------------------------

 ※ 介绍
     格式: #define 宏名 宏值 (注意中间一定要加空格)
     这个格式的代码称之为宏定义，可在代码中任意使用.
     预编译时, 编译器对宏定义处理就是“查找、替换”, 将所有出现宏名字的地方替换成该宏对应的字符串


 ※ 使用
     #define iPad 
     #define N 10
     #define PI 3.1415926
     #define TWO_PI PI*2   
     #define AREA(r) (PI * (r) * (r)) //使用方式：AREA(2) 需要加括号，如果没有加括号,传值AREA(10*2),则结果为 PI*10+2*10+2 
     #undef PI //结束宏定义

     int a  = N +1;
     
     高级用法：
      #define M(a) a + a + a
      int c = M(10); //结果为30 

      #define M(a,b) a * b
      int c = M(10, 20); //结果为200

      #define M(a,b) a > b ? a: b
      int c = M(10, 20); //结果为20   
 
     
 ※ 注意点
    1.宏值可以为任意的内容，在定义宏的时候，不会去检查语法，编译后才会检查语法
    2.使用#undef 宏名 可以解除这个宏，让宏提前失效
    3.宏值一旦换行，就认为这个宏定义就结束
    4.宏值无论是什么，在编译时，本色替换，都会将宏值原本的替代，而不是把宏值的结果去替代
      例1：
       #define M 10 + 10 + 20
       int c = 3 * M; //结果为60 

      例2：
       #define M 10;
       int a = 20 + M //不会报错，结果为30
       int b = M + 20; //报错

      例3：
       #define D "%d"
       #define P printf
       int a = 20;
       P(D,a);//20
  


 ※ #define 和 typedef 区别
    1).处理时机不同，
       #define 在程序编译时执行，
       typedef 运行时才会执行
    
    2).使用范围不同。
       #define 任意格式都可以使用
       typedef 基本数据类型才可以使用


-------------------------------------------------------------------------------------------------------------------



#if 条件编译指令
-------------------------------------------------------------------------------------------------------------------

 ※ 作用
     根据宏值判断，设置那个值 条件只能是宏，而不能是变量
     

 ※ 使用
     #define N 20

     #if N > 0
      printf("呵呵");
     #elif N > 10
      printf("哈哈");
     #else
      printf("啦啦啦");  
     #endif


     #define iPad

     #ifdef iPad
      printf("有iPad这个宏");
     #else
      printf("没有iPad这个宏");  
     #endif



-------------------------------------------------------------------------------------------------------------------
