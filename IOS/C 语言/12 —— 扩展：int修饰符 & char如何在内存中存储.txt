


int 类型的修饰符
----------------------------------------------------------------------------------------------------------------------------------------

※ 介绍
    一个int类型的变量在内存中占据4个字节, 范围为正负21e的整数
    如果有时要存比这个范围大的数值或有的时候int占用字节太多，用不上。比如年龄0-200，没必要用那么大空间
    所以int修饰符出现了
    int修饰符 作用：指定int类型的变量在内存中占用的字节数。


※ short修饰符
    被short修饰的int类型在内存中只占2个字节，所以取值范围是-32768-32767(2^15)

    a.short输出符:%hd
    b.如果要声明1个short int类型的变量，可以省略int

    short int num1 = 10; 
    short num2 = 20; 
    printf("short num1的值是%hd", num1); //10
    printf("short num2的值是%hd", num2); //20


※ long修饰符
    32为的操作系统下，被long修饰的整形变量占据4个字节。
    64为的操作系统下，被long修饰的整形变量占据8个字节。
    OS X系统 还有 IOS系统都是64位的。

    a.long输出符:%ld
    b.如果要声明1个long int类型的变量，可以省略int

    long int num1 = 10; 
    long num2 = 20; 
    printf("long num1的值是%ld", num1); //10
    printf("long num2的值是%ld", num2); //20


※ long long修饰符
    无论32位、64位的系统，都占据8个字节

    a.long输出符:%lld
    b.如果要声明1个long long int类型的变量，可以省略int

    long long int num1 = 10; 
    long long num2 = 20; 
    printf("long long num1的值是%ld", num1); //10
    printf("long long num2的值是%ld", num2); //20


----------------------------------------------------------------------------------------------------------------------------------------



char变量如果在内存中存储数据
----------------------------------------------------------------------------------------------------------------------------------------

※ 字符数据char在内存中是如何存储的?
    字符数据在内存中存储的是这个字符所对应的ASCII码的二进制补码。
    char ch = 'a';
    内存中，ch变量中存储的不是'a'，而是对应的ASCII码 97的二进制补码。
    
    所以，我们可以直接为char变量赋值1个整数。
    因为你char变量中本来存储的就是1个整数。
    也可以使用%d来输出char的值,因为你char变量中本来存储的就是1个整数。


※ %c读取
    %c读取的时候，先从变量中读取存储在变量中的整数。
    然后再去ASCII码表中去查找这个整数对应的字符。
    再显示这个字符


----------------------------------------------------------------------------------------------------------------------------------------


