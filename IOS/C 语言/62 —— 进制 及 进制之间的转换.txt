




二进制、十进制、八进制、十六进制
-------------------------------------------------------------------------------------------------------------------

 ※ 介绍
    C语言整形有4种表示方式：二进制、十进制、八进制、十六进制

    二进制：Ob开头,0和1组成,占位符:无
    八进制：0开头, 0-7组成, 占位符:%o
    十进制：默认,  0-9组成, 占位符:%d
    十六进制：0x或者0X开头，0-f组成，其中10~15分别以a~f(此处的a~f不区分大小写)来表示 占位符:%x

    //二进制
    int a = 0b101101

    //八进制
    int a = 0137321;

    //十六进制
    int a=0x13;
    int b=0x2af;



 ※ 二进制
     逢二进一。每1位数字使用0或者1来表示.
     0 1 10 11 100 101 110 111 1000 ...

     写法：0b开头 只由0和1组成
     占位符：无

     int num = 0b1001101110;
     printf("num = %d", num); // num = 622



 ※ 八进制
     逢八进一。每1位数字只能是0 1 2 3 ... 7
     0 1 2 3 4 5 6 7 10 11 12 13 14 15 16 17 20 ...

     写法：0开头 只由1..8数字组成
     输出占位符：%o

     int num = 0134;
     printf("num = %o", num); // num = 134 %o 以8进制输出
     printf("num = %d", num); // num = 92




 ※ 十进制
     逢十进一。每1位数字只能是0 1 2 3 ... 8 9
     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ...

     写法：默认十进制
     输出占位符：%d




 ※ 十六进制
     逢十六进一。每1位数字只能是0 1 2 3 ... 8 9 a b c d e f
     0 1 2 3 ... 8 9 a b c d e f 10 ...


     写法：0x开头 只由1..d e f数字组成
     输出占位符：%x

     int num = 0x12acd;
     printf("num = %x", num); // num = 12acd %x 以16进制输出
     printf("num = %d", num); // num = 76493


-------------------------------------------------------------------------------------------------------------------------------



进制之间的转换
-------------------------------------------------------------------------------------------------------------------------------

※ 基本概念
    数码：指的是这个数据的每一位的数字。
    数位：数码在这个数中的位置，从右到左，从0开始，依次递增
    基数：指的就是这个数的进制，就是每一个数码可以有多少个数据来表示。
    位权：数码 乘以 基数的数位次方 任何数的0次方都是1



 ※ 十进制 转 二进制
     除2取余法：将这个数除以2，直到余数为1或者1，然后将余数倒序，就是这个十进制数对应的2进制数

     栗子：
     178转二进制
     178/2 = 89 余0
     89/2  = 44 余1
     44/2  = 22 余0
     22/2  = 11 余0
     11/2  = 5  余1
     5/2   = 2  余1
     2/2   = 1  余0
     由上178对应的2进制数是:0b10110010



 ※ 二进制 转 十进制
     加权法：将这个二进制数的每个数码的位权相加，就是这个二进制对应的十进制数

     栗子：
     10101转十进制
     第0位的位权：1*2^0 = 1
     第1位的位权：0*2^1 = 0
     第2位的位权：1*2^2 = 4
     第3位的位权：0*2^3 = 0
     第4位的位权：1*2^4 = 16
     相加得21
     由上10101对应的十进制数是:21



 ※ 十进制 转 八进制
     除8取余法：将这个数除以8，直到余数小于8为止，然后将余数倒序，就是这个十进制数对应的八进制数

     栗子：
     78转二进制
     78/8 = 9 余6
     9/8  = 1 余1
     由上78对应的八进制数是:0116



  ※ 八进制 转 十进制
     加权法：将这个八进制数的每个数码的位权相加，就是这个八进制对应的十进制数

     栗子：
     0342转十进制
     第0位的位权：2*8^0 = 2
     第1位的位权：4*8^1 = 32
     第2位的位权：3*8^2 = 192
     相加得226
     由上0342对应的十进制数是:226


-------------------------------------------------------------------------------------------------------------------------------



进制之间的转换
-------------------------------------------------------------------------------------------------------------------------------

 ※ 二进制 转 八进制
     三合一法：将这个二进制从底位到高位每三位分成1组，高位不够补0，将每1组转换为对应
               的十进制，将每一组的十进制连起来，就是这个二进制对应的八进制。

     栗子：
     1011100110011转八进制
     上面可分为5组  001 011 100 110 011
     对应是十进制数  1   3   4   6   3
     由上1011100110011对应的八进制数是:0b13463



 ※ 八进制 转 二进制
     一拆三：将这个八进制数的每个数码拆为1个三位的二进制数，然后把这些二进制数连起来

     栗子：
     134674转二进制
     134674每个拆分  1   3   4   6   7   4
     对应的二进制数 001 011 100 110 111 100
     由上134674对应的二进制数是:0b1011100110111100




 ※ 二进制 转 十六进制
     四合一法：将这个二进制从底位到高位每四位分成1组，高位不够补0，将每1组转换为对应
               的十六进制，将每一组的十六进制连起来，就是这个二进制对应的十六进制。

     栗子：
     11100101011转十六进制
     上面可分为3组  0111 0010 1011
     对应是十进制数   7   2    b
     由上1011100110011对应的八进制数是:0x72b



 ※ 十六进制 转 二进制
     一拆四：将这十六进制数的每个数码拆为1个四位的二进制数，然后把这些二进制数连起来

     栗子：
     4dea761转二进制
     4dea761每个拆分 4    d    e    a    7    6    1
     对应的二进制数 0100 1101 1110 1010 0111 0110 0001
     由上4dea761对应的二进制数是:0b100110111101010011101100001


-------------------------------------------------------------------------------------------------------------------------------
