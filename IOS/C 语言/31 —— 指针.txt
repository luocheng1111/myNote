




指针-C语言的灵魂
-------------------------------------------------------------------------------------------------------------------

※ 指针
     指针就是变量的地址，占8个字节

-------------------------------------------------------------------------------------------------------------------



指针变量
-------------------------------------------------------------------------------------------------------------------

※ 指针变量
     指针变量就是存储变量的地址，这个地址指向了另外1个变量.


※ 指针的优势在那里?
     1.直接操作内存，效率必然更高
     2.可以写复杂度更高的数据结构，这个也好理解，程序员可以操作内存，当然可以写出灵活、复杂的数据结构
     3.编写出简洁、紧凑、高效的程序



※ 指针的使用
    int num = 10;
    int *p = &num; //p1指针指向了num变量
    *p = 200; //*p1代表指针指向的变量  

    printf(" p的值是%p\n", p); //p的值  是一个地址，存的是num的地址
    printf("*p的值是%d\n", p); //*p的值 是num的值 200
    printf("&p的值是%p\n", &p);//&p的值 是指针*p本身的地址
    
    指针p变量存的内容是num的地址。
    所以p = num的地址
       *p = num的值
       &p是指针*p本身的地址
    




※ 野指针
    我们声明1个指针变量，如果没有为其初始化。
    那么这个时候指针中的值为垃圾值，就指向了一块随机空间。很危险***。

    这块空间：1.有可能无人使用
              2.有可能别的程序在用 
	      3.有可能系统在用
     
    这个时候，去访问指针指向的变量的时候，会报BAD_ACCESS错误
    像这样的指针我们就叫做野指针。
    

※ NULL值。
    如果出现了野指针，程序就会很危险，有可能造成自己或者别的程序崩溃。
    所以，指针没有默认值时，初始化下面2种;
    int *p1 = NULL; //NULL值代表指针变量不指向内存中的任何地址，谁多不指。
    

※ 指针作为函数的参数   
    a.当函数的参数类型是 int char float double的时候，参数传递是值传递
    b.但函数的参数类型是 数组的时候，参数的传递是地址传递
*** c.但函数的参数类型是 指针的时候，参数的传递是地址传递

-------------------------------------------------------------------------------------------------------------------


