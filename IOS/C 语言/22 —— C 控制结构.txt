


OC 控制语句
-------------------------------------------------------------------------------------------------------------------

- if结构
- switch-case结构
- while
- do-while
- for
- 三目表达式/三元表达式
- break; 和 continue;

- goto 跳转语句


-------------------------------------------------------------------------------------------------------------------





if 表达式
-------------------------------------------------------------------------------------------------------------------

※ 语法
    if(条件表达式1){
	     执行代码;
    }else if(条件表达式2){
       执行代码;
    }else if(条件表达式3){
       执行代码;
    }else{
       执行代码;
    }


-------------------------------------------------------------------------------------------------------------------------




switch-case结构
-------------------------------------------------------------------------------------------------------------------------

※ 语法
    switch(表达式){ //表达式：除了小数， char、整形、枚举都可以
    case 值1:
       执行代码;
       break;
    case 值2:
       ...
       break;
    case 值3:
       ...
       break;
    default:
       ...
       break;
    }


-------------------------------------------------------------------------------------------------------------------------



while 表达式
-------------------------------------------------------------------------------------------------------------------------

※ 语法
    while(条件表达式){ //条件表达式为真，则执行
       那段需要被反复不停执行的代码;
       循环体;
    }


 ※ eg:
    int i = 0;
    while(i<5){
       printf("ILY\n");
       i++;
    }


-------------------------------------------------------------------------------------------------------------------------




do-while 表达式
-------------------------------------------------------------------------------------------------------------------------

※ 语法
    do{
       循环体;
    }while(条件表达式);


※ 对比
   do-while：先执行，在判断，至少执行一次
   while：先判断，在执行


-------------------------------------------------------------------------------------------------------------------------




for 循环结构
-------------------------------------------------------------------------------------------------------------------------

※ 语法
    for(int i = 0; i<5; i++){
       printf("for循环\n");
    }



※ 重点：
    1.三个表达式位置固定，第1个是初始化表达式，第2个是循环条件，第3个是循环后操作表达式
    2.三个表达式都可以省略，但分好不能省略，如果第2个表达式省略，那么循环条件默认是成立的。
      for( ;  ; ){
        ...
      }



※ 其他用法
    eg1：
      for(printf("A\n");printf("B\n");printf("c\n")){
         printf("D\n");
      }


    eg2：
      int userName=0, password=0;
      for(; userName!=123456||password!=888888;){
         printf("用户名：");
         scanf("%d", &userName)
         printf("用户名：");
         scanf("%d", &password)
      }


    eg3：
      for(int i=0,j=0,k=0; i<10; i++,j++,k++){
         printf("哈哈哈\n");
      }

-------------------------------------------------------------------------------------------------------------------------



三元表达式
-------------------------------------------------------------------------------------------------------------------------

※ 语法
    条件表达式 ? 值1 : 值2;
    如果条件表达式成立,那么这个三元表达式的结果是值1,否则就是值2

    int i = 20;
    int a = i > 0 ? 100 : 200; //a的值是100;

-------------------------------------------------------------------------------------------------------------------------



break 和 continue
-------------------------------------------------------------------------------------------------------------------------

※ break
    1。在switch-case中，代表立即结束switch-case机构
    2。在循环体(while、for)中,如果遇到break;,
       就会立即结束当前这个循环结构break;后面的代码，已经整个循环体结束运行.



※ continue
    1.在循环体中，如果遇到了continue;
      就会立即结束本次循环，本次continue;后面的代码不会允许，
      然后回去判断循环条件，如果循环条件成立，继续运行循环体，不成立，则结束运行循环体


-------------------------------------------------------------------------------------------------------------------------






goto 跳转语句
-------------------------------------------------------------------------------------------------------------------------

※ 语法
    标签名:
      ....
      ....
     goto 便签名;

    //这是一个死循环
    loop:
      printf("嘿嘿嘿1\n");
      printf("嘿嘿嘿2\n");
      printf("嘿嘿嘿3\n");
      printf("嘿嘿嘿4\n");
      goto loop;

    标签名随意,但要符合标示符的命名规则和规范。



※ 注意
    1.不建议经常使用goto 因为它不安全，容易造成死循环。
    2.goto可以往前跳，也可以往后跳
    3.只能在当前函数中跳
    4.标签名下面的那一句代码不能是声明变量
      如果非要做的话 就写1句printf("");


-------------------------------------------------------------------------------------------------------------------------


