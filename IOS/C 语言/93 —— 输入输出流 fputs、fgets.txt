



fputs() 输出流 f --> File
-------------------------------------------------------------------------------------------------------------------

※ fputs() 输出流
    作用：将字符串数据 输出到 指定的流中。
    输出地方有两种：      
      1. 输出到磁盘上的文件
      2. 输出到控制台


※ fputs()函数的使用
    1).输出到控制台
        char *name = "黑马程序员";
	fputs(name, stdout); //stdout指控制台
    
    2).将字符串存储到文件中.
       //1，先声明1个文件指针，指向磁盘上的文件。
        FILE *pFile = fopen("/User/Itcast/Desktop/abc.txt","w"); //第2个参数是操作文件的模式
       
       //2.使用fput函数将字符串写入到指定的文件流中
        char *name = "黑马程序员";
        fputs(name, pFile); //stdout指控制台
        
       //3.写完之后，一定要记得fclose()将这个文件关闭。
	fclose(pFile);


-------------------------------------------------------------------------------------------------------------------




fgets() 输入流
-------------------------------------------------------------------------------------------------------------------

※ fgets() 输入流
    作用：从指定的流中读取字符串。
    输入地方有两种：      
      1. 从标准输入流(键盘)中读取数据。
      2. 从文件流中读取数据。



※ fgets() 和 scanf()、gets()的对比

    scanf()的缺点
    a. 不安全
    b. 输入的空格会被认为结束

    gets()函数的缺点
    a. 不安全

    fgets()函数的优点
    a. 安全
    b. 空格也会一并接收


※ fgets() 语法
   fgets(要将字符串存储到哪1个数组中，最多接受多少个长度的字符串，指定流);
   参数2：我们写n，那么函数最多接受n-1个长度的字符串，最后1位'\0'.

   1).从控制台接受数据
      char input[5];
      printf("请输入:\n");
      fgets(input, 5, stdin); //stdin，代表标准输入流，也就是键盘流，控制太输入，

      printf("你输入的是:%s\n",input);


   2).从文件中读取数据.
      //1，先声明1个文件指针，指向磁盘上的文件。
       FILE *pFile = fopen("/User/Itcast/Desktop/abc.txt","r"); //第2个参数是操作文件的模式
       
     //2.使用fgets函数从指定的文件流中读取
       char content[50];
       fputs(content, 50, pFile); 
 
     //3.输出
       printf("读取的内容是:%s\n",content);
	
     //4.关闭文件流。
       fclose(pFile);



※ 为什么fgets()标准流是安全的?  
   1).如果我们输入的字符串长度大于等于 第2个参数n。 则只会接受n-1个，然后最后1个自动是'\0'.
      这样，就不会崩了。
   2).如果我们输入的长度小于了n-1.那么就会将我们最好输入的换行字符'\n'一并的接收,然后后面才是'\0'结束符
   3).只有回车代表输入结束，而不是空格或者回车
 


-------------------------------------------------------------------------------------------------------------------