


Swift 面向对象(Object Orient Programming, OOP)
---------------------------------------------------------------------------------------------------

※ 介绍
    Swift不仅提供了面向过程的支持，也提供了全面的面向对象支持，与普通面向对象的编程语言(只支持定义类)不同,
    Swift定义了枚举、结构体、类 3种面向对象的类型，
    使用枚举、结构体定义的变量是值类型，使用类定义的对象是引用类型
    

※ 何为面向对象编程？
    可把一切看成对象，其有属性，有方法，属性描述一些特征、状态，方法描述对象的一些方法
    Swift已经提供些一些基础数据类型，比如Int,String,Float，而我们创建属于自己的
    数据类型(自定义数据类型，枚举，结构体，类)，这叫做面向对象编程

※ 类及对象
    面向对象的两大核心是类和对象，
    类是一批具有共同特性的对象的定义性概念--比如人类，而对象则是类的具体实例，
    比如你、我、乔布斯...都是人类的对象。
    从面向对象的角度来说，人类为类，你、我、乔布斯为对象

---------------------------------------------------------------------------------------------------


面向对象三大特性
---------------------------------------------------------------------------------------------------
 
※ 封装
    封装指的是把对象的状态数据、实现细节隐藏起来，然后再暴露合适的方法运行外部程序改变对象的状态，这个暴露的方法
    可以保证修改之后对象的完整性。
    Swift提供了private、internal和public等访问权限控制符来实现封装


※ 继承
    子类继承父类，即可获得父类定义的属性和方法，因此通过继承可以复用已有的类。
    Swift提供了单继承支持，每个子类最多只能有一个直接父类。Swift也通过协议弥补了单继承灵活性不足的缺点


※ 多态
    多态可以充分利用面向对象的灵活性。


---------------------------------------------------------------------------------------------------