



封装
--------------------------------------------------------------------------------------------------------

※ 什么是封装
    就是把一些代码和内部操作封装在一个方法里，你只管调用就可以了，
    实际上怎么实现的你不用管
    目的：不希望让你知道我是怎么实现的或者不希望你修改的的代码或者参数


※ 封装的好处
    1.屏蔽内部实现，外界不需要知道内部是如何实现的 只需要这个对象有什么用
    2.可以将事物更加抽象，使用起来更加的方便
    3.后期维护十分方便
 
   

※ 封装
    1.类是最大的封装
    2.成员变量的封装有访问修饰符、有setter、getter



※ 成员变量的封装- 访问修饰符
    @private: 私有，属性只能在类内可以使用，类外无法调用，不可被继承 
    @protected: 默认修饰符，受保护，属性可以在本类和其子类调用，类外无法调用，
    @package：属性可以在当前框架中访问
    @public:  属性在任意的地方使用。 调用用->, 比如 people->_age = 16;

   注：
    访问修饰符是用来修饰变量，用来限定对象的变量的使用范围。方法是没有访问修饰符的



※ 成员变量的封装- setter、getter写法：
     1.把属性的 @public去掉
     2.写属性的setter、getter方法，并实现，并判断其合理性，
       比如age，赋值时，范围应该是0-200之间。。 
     3.把setter、getter只写一个，就称为只读或者只写属性
   


※ 两种方式的区别
   属性是类内部特有的，不应该由外部随便传入，随便调用，
   所以在属性的赋值和获取时，应该判断其合理性。这个时候应该用setter、getter


--------------------------------------------------------------------------------------------------------



私有属性、私有方法
--------------------------------------------------------------------------------------------------------

※ 真丶私有属性 

    私有属性：
    当我们给属性修饰为 @private时候，这个属性为私有属性。
    可以当外界想访问这个属性时，虽然不能访问，但Xcode依旧会有提示这个类拥有这个属性
    
    真丶私有属性：
    我们不在 @interface里声明这个属性，而是在 @implementation里声明这个属性，
    这时外界就不会提示这个属性，区别就在于提示和不提示
            
    


※ 私有方法
     方法不写声明，只写实现。那么这个方法就是1个私有方法，
     只能在本类的其他方法中调用 不能在外界调用。


--------------------------------------------------------------------------------------------------------