



类的方法
-------------------------------------------------------------------------------------------------------

※ 方法的声明 
   
   语法： -/+ (返回值类型) 方法名称;

   @Interface People:NSObject
     @property NSString *name;

     + (int) showA;  
     - (void) showB;
     - (int) showC;
     - (void) showA:(NSString *)foodName; //一个参数，方法名称 showA:
     - (int)  showA:(int)a :(int)b; //两个参数, 方法名称：showA: :
     - (int)  showA:(int)a andB:(int)b; //两个参数, 形参别名，方法名称：showA: andB: 
 
   @end
    
   -和+
    -：对象方法(用对象名调用) 或叫非静态方法,需要先声明在调用
    +：类方法(用类名调用) 或叫静态方法,可以直接通过类名.方法直接调用



※ 方法调用
    People *people = [[People alloc] init];
    
    //调用+号方法 showC方法，可以不用实例话就直接调用
    [People showA];
    
    //调用-号方法 showC方法
    [people showB];
    int num = [people showC];
    
    //调用1个参数的方法
    [people showA:@"红烧排骨"];

    //调用2个参数的方法
    [people showA:10 :20];

    //调用2个参数的方法
    [people showA:10 andB:20];




※ 取名规范及建议
   1).如果方法只有1个参数，要求最好的方法名字叫做 xxxWith:  或者 xxxWithxxx:

      eatWith;
      eatWihtFood;

      这样写的话，那么调用方法的时候看起来就像是1条完整的语句，提高了我们代码的阅读性。
      

      -(void)eat:(NSSting *)foodName;
      -(void)eatWith:(NSSting *)foodName;
      -(void)eatWithFood:(NSSting *)foodName;
     
      Person *p1 = [[Person alloc] init]
      [p1 eat:@"红烧肉"];
      [p1 eatWith:@"红烧土豆"];
      [p1 eatWithFood:@"红烧狮子头"];


   2).如果方法有多个参数 建议这个方法名称：
      - (返回值类型) 方法名称:(参数类型)形参名称1 and:(参数类型)形参名称2 and:(参数类型)形参名称3
      
      int sum1 = [p1 sum:10 :20];
      int sum2 = [p1 sumWith:10 and:20]
      int sum3 = [p1 sumWithNum1:10 andNum2:20]

   
-------------------------------------------------------------------------------------------------------


类方法
-------------------------------------------------------------------------------------------------------

※ 方法分为类方法和对象方法
   -和+
    -：对象方法(用对象名调用) 或叫非静态方法,需要先声明在调用
    +：类方法(用类名调用) 或叫静态方法,可以直接通过类名.方法直接调用



※ 类方法的有点和缺点？
    类方法：不需要通过对象名来调用，所以如果要调用类方法不需要创建对象。
            而是直接使用类名来调用 [类名  类方法]
    
    优点；1.节约空间：因为调用类方法不需要创建对象。这样就可以节约空间。
          2.提高效率：因为调用类方法不需要拐弯 直接找到类 直接执行类中的类

    缺点：1.类方法中不能访问属性，但我们可以在类方法中创建1个对象 访问这个对象的属性
          2.类方法中不能调用对象方法



※ 什么时候我们可以将方法定义为类方法呢？
    1.如果方法不需要直接访问属性 
      也不需要直接调用其他方法。
      那么我们就可以将这个方法定义为类方法。

     + (Person *) person()
     {	
        Person *p = [Person new];
	return p;
     }
     
     + (Person *) personWithName:(NSString *)name andAge:(int)age
     {	
        Person *p = [Person new];
	p->_name = name;
	p->_age = age;
	return p;
     }
   
   
-------------------------------------------------------------------------------------------------------



类的初始化方法
-------------------------------------------------------------------------------------------------------


※ 类的初始化方法
   1.- (instancetype)init
   2.- (id)init   
   初始化方法有上面两种方式，
   id是万能格式，可以返回任何格式
   instancetype是指自己本身的对象，但建议使用instancetype，防止有时候出错

   - (instancetype)init
   {
     self = [super init]
     if (self){
	...
	... //可以给属性赋值
     }
     return
   }
   
   
-------------------------------------------------------------------------------------------------------




