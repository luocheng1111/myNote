

UITextField
----------------------------------------------------------------------------------------------------------------------------------------

※ UITextField 介绍
   UITextField 文本输入区域 只能输入单行的文字，不能输入或显示多行


※ UITextField 分栏控件 的使用
     
     UITextField *textField = [[UITextField alloc] init];
     //设置位置
     textField.frame = CGRectMake(100,100,180,40);
     //设置内容文字
     textField.text = @"用户名";
     //设置边框的风格
     textField.borderStyle = UITextBorderStyleRoundedRect;
     //设置键盘风格
     textField.keyboardType = UIKeyboardTypeNumberPad;
     //设置提示文字
     textField.placeholder = @"请输入用户名.....";
     //是否作为密码输入
     textField.secureTextEntry = NO;
     //添加到View中
     [self.view addSubView:textField];


※ UITextField 其他设置

   // 密码类型
   textField.secureTextEntry = YES;// 密码类型
   // 键盘模式
   textField.keyboardType = UIKeyboardTypeNumberPad; //键盘模式
   // 设置清除模式
   textField.clearButtonMode = UITextFieldViewModeAlways;// 设置清除模式
 


※ UITextField 一些要注意的点
   1.设置背景图片
     注意：如果borderStyle为：UITextBorderStyleRoundedRect，背景图片是显示不出来的！其它类型都可以设置图片！



※ 多个UITextField 代码指导  Deme见:Demo/UITextField_KeyBoard.zip
   1.把所有textField加入到一个集合中，为了方便UITextField和键盘的相关操作
     @property (nonatomic,strong) IBOutletCollection(UITextField) NSArray *textFields;

   2.键盘的down按钮默认文字为下一个，且键盘点击完成后，键盘并不会消失，于是需要加监听(Did End On Exit)，
     并且将最后一个textfied的keyboard按钮类型设置为Down
     - (IBAction)keyboardDownBtnClick:(UITextField *)field {
         NSInteger index = [self.textFields indexOfObject:field];
         if (index < _textFields.count - 1) {
            UITextField *nextField = _textFields[index + 1];
            [nextField becomeFirstResponder];
         }  else {
            [field resignFirstResponder];
         }
      }

   3.加入点击其他位置，键盘自动消失的监听
     - (void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event{
        [self.view endEditing:YES];
     }



※ 清空多个UITextField 代码  Deme见:Demo/UITextField_KeyBoard.zip
   - (IBAction)clearButtonPressed {
      NSArray *subviews = self.view.subviews;
      for (UIView *view in subviews) {
          if ([view isKindOfClass:UITextField.class]) {
               UITextField *field = (UITextField *)view;
               field.text = @"";
          }
      }
      [self.view endEditing:YES];
   }



※ 项目Demo/UITextField_KeyBoard.zip
   功能：
   1.完成功能 清楚按钮
   2.完成功能 触摸其他地方监听 键盘消失
   3.键盘切换下一个切换
   4.当屏幕不够时，键盘弹起


----------------------------------------------------------------------------------------------------------------------------------------


UITextField 和 键盘
----------------------------------------------------------------------------------------------------------------------------------------

※ UITextField设置键盘类型
   textField.keyboardType = UIKeyboardTypeNumberPad;



※ 轻触背景隐藏软键盘的几种方式
   1.隐藏view的键盘
     [self.view endEditing:YES];

   2.设置所有的textField监听(Did End On Exit)
     - (IBAction)keyboardDownBtnClick:(UITextField *)field {
         [field resignFirstResponder];
      }
   
   3.在storyboard，点击背景View，将它的Custom Class设置为UIControl，
     这样才会出现Touch Down事件。右击背景View弹出面板，按住Touch Down事件旁边的圆圈，
     然后拖曳到右侧.h文件的空白地方建立该事件的处理方法。




※ UITextField 跟随键盘移动 Deme见:Demo/UITextField_KeyBoard.zip
   1.注册通知监听，可以在viewWillAppear注册，在viewWillDisappear取消
     NSNotificationCenter *center = [NSNotificationCenter defaultCenter];
     [center addObserver:self selector:@selector(keyboardWillShow:)
                   name:UIKeyboardWillShowNotification object:nil];
     [center addObserver:self selector:@selector(keyboardWillHide:)
                   name:UIKeyboardWillHideNotification object:nil];
   
   2.具体代码
    - (void)keyboardWillShow:(NSNotification *)sender {
      //获得键盘的高度
      CGRect keyboardFrame = [sender.userInfo[UIKeyboardFrameEndUserInfoKey] CGRectValue];
      CGFloat keyboardHeight = keyboardFrame.origin.y;
      //获得当前textField的最大高度
      CGFloat textField_maxY = ([self firstResponder].frame.origin.y)+([self firstResponder].frame.size.height);
    
      //判断是否要移动
      CGFloat transformY = keyboardHeight - textField_maxY;
      if (transformY < 0) {
         CGRect frame = self.view.frame;
         frame.origin.y = transformY ;
         self.view.frame = frame;
      }
    }


    - (void)keyboardWillHide:(NSNotification *)sender {
      //恢复到默认y为0的状态，有时候要考虑导航栏要+64
      CGRect frame = self.view.frame;
      frame.origin.y = 0;
      self.view.frame = frame;
    }

    - (UIView *)firstResponder {
     for (UITextField *field in _textFields) {
        if ([field isFirstResponder]) {
            return field;
        }
     }
     return nil;
    }




----------------------------------------------------------------------------------------------------------------------------------------
