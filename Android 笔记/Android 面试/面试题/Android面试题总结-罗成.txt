

 四大组件
   1.Activity的生命周期、异常下的生命周期、启动模式与fragment的区别
   2.ActivityA跳转ActivityB然后B按back返回A，各自的生命周期顺序，A与B均不透明。
   3.Activity横竖屏切换的生命周期
   3.如何理解Android系统的Service，启动模式，各有什么区别
   4.Service是如何与Activity进行通信的
   4.Service和Thread的关系，同样是开子线程，为什么要用 Service而不用 MainActivity？
   5.什么是AIDL，IntentService是什么？
   6.注册广播的几种方式，他们的区别？
   7.聊一聊ContentProvider使用


 Handler
   1.介绍一下Handler，讲一下Handler的机制 《Android基础面试题 23》
   2.HandlerThread《Android基础面试题 84》
   3.Handler、Thread和HandlerThread的差别《Android基础面试题》



 其他常见基础问题
   1.Android的数据存储方式
   2.聊一聊Android的动画
   3.聊一聊Android的适配
   4.讲解一下ConstraintLayout 约束布局，他的优缺点
   5.聊一聊对ImageView的scaleType的理解
   6.Bunder传递对象为什么需要序列化？Serialzable和Parcelable的区别？《Android基础面试题》
   7.Android为什么引入Parcelable？《Android基础面试题》
   8.更新UI方式有那些《Android基础面试题 15》
   9.显示Intent与隐式Intent的区别 《Android基础面试题 88》


 自定义View
   1.Android View的绘制流程，与SurfaceView的区别 
   2.View的事件拦截(分发)机制，滑动冲突怎么解决？ 《Android高级面试题》
   3.Window-View-Activity三者的关系？


 异常处理
   1.什么是ANR，如何避免它？ 《Android基础面试题 1 》
   2.什么情况下会导致内存泄露(OOM)，如何查看和解决 《Android基础面试题 29》


 网络请求
   1.Get与Post的区别
   2.Http与Https的区别
   3.HttpClient和HttpConnection的区别？


 设计模式
   1.MVC，MVP，MVVM的解释和实践, 这三种设计模式，项目中如何选择 《Android基础面试题 69》
   2.讲一下你对Android JetPack的理解
   3.讲一下你项目中用到过的设计模式？为什么要用这个设计模式

 优化相关
   1.Android怎么加速启动Activity？ 《Android基础面试题》
   2.做过哪些性能优化？是怎么评测和具体优化的？《Android高级面试题》
   3.你项目中用到哪些开源库？说说其实现原理？
   4.谈一谈Android系统的优缺点




其他常见问题
   1.讲一讲 组件化与插件化
   3.讲一讲 热修复与热更新
   4.Gradle
   3.谈谈你对Android设计模式的理解
   4.建造者模式、单例模式、工厂模式、原型模式、适配器模式。
   5.项目中常用的设计模式
   6.手写生产者/消费者模式










 四大组件
   1.Activity的生命周期、启动模式与fragment的区别 《笔记》
     Activity与fragment的区别
     相同点：都是显示界面的一个容器
     不同点：1.层级关系：Activity是的安卓四大组件之一，由系统管理，而fragment则依附于Activity，由Activity管理
                 2.灵活度：fragment相比Activity来说，更灵活，我们可以在一个Activity中同时出现多个Fragment，并且还可以在需要时替换fragment界面
     大多数情况下，都是两者结合使用，可以实现多种灵活的界面

    2.ActivityA跳转ActivityB然后B按back返回A，各自的生命周期顺序，A与B均不透明。
      ActivityA跳转到ActivityB：
        Activity A：onPause 
        Activity B：onCreate 
        Activity B：onStart  
        Activity B：onResume  
        Activity A：onStop 

      ActivityB返回ActivityA：
        Activity B：onPause  
        Activity A：onRestart  
        Activity A：onStart  
        Activity A：onResume  
        Activity B：onStop  
        Activity B：onDestroy


 其他常见基础问题
   1.Android的数据存储方式
      一.SharedPreferences方式
      二.文件存储方式
      三.SQLite数据库方式
      四.内容提供器（Content provider）方式
      五.网络存储方式


 自定义View
   1.Android View的绘制流程，与SurfaceView的区别
      绘制会从根视图ViewRoot的performTraversals()方法开始，从上到下遍历整个视图树，会经历measure、layout、draw三个过程，这个过程中，ViewGroup负责通知自己的子View进行绘制操作。
      每个View控件则负责绘制自己
      Android系统的刷新的间隔是16ms，如果View的绘制在16ms内完成，则没问题，但如果我们的绘制逻辑复杂时，就会有掉帧现象会使用户感觉到造成卡顿，而且View的绘制是在主线程里进行的
      为此，SurfaceView就可以解决这一问题，SurfaceView采用双缓冲机制，在另外一个线程里绘制，等到刷新时，把绘制好的展示出来，就不会有界面卡顿的感觉

   2.Window-View-Activity三者的差别？
      Activity就像一个容器，包纳万物，既要显示视图，也要处理逻辑和处理生命周期，而其中显示的视图就是Window，Window有很多个View组成


 异常处理
   1.什么情况下会导致内存泄露(OOM)，如何查看和解决 《Android基础面试题》
      常见的有
      1.线程造成的内存泄漏，如线程执行时间很长，在Activity退出时，还未执行完，如果未关闭就会造成内存泄露，这种常见的情况有网络请求，要在界面关闭时取消网络请求及取消网络请求的回调
      2.Handler的使用造成的内存泄漏，一些耗时的操作未在Activity退出时及时关闭也会造成内存泄露，这种情况要在界面关闭时移除所有消息
      3.BitMap一次性加载过多或者过大时占用内存太多可能会造成泄露，可以考虑分批加载并在界面关闭时回收
      3.一些资源未关闭也会造成内存泄露，比如如SQLite数据库的油标Cursor，文件或者流的引用，这些要在用完后调用关闭方法

      大多数情况下的内存泄露是一些资源在Activity销毁时未关闭导致的，比如SQLite数据库未关闭，广播未取消注册，文件或流的引用没回收 
      还有一些情况，比如Handler未清空消息，网络请求未及时取消也会导致内存泄露
      怎么查看和解决：
       1.使用Android studio自带的Monitor(检测器)观察App内存的使用情况来查看，如果说使用内存占用越来越大了，那就说明有可能内存泄露了
       2.使用Square开源的LeakCanary，我们在Grandle里配置，然后在Application配置一下就可以了，如果检测到某个Activity 有内存泄露，LeakCanary 就会在他生成的应用中显示出来
      
 网络请求
   1.Http与Https的区别
      1、Https协议需要到CA申请证书，一般免费证书较少，因而需要一定费用。
      2、Http是超文本传输协容议，信息是明文传输，https则是具有安全性的ssl加密传输协议。
      3、http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。

   3.HttpClient和HttpConnection的区别
      HttpClient 适用于 web browsers, 他们是可扩展的，并且拥有大量的稳定APIs。但是，在不破坏其兼容性的前提下很难对如此多的APIs做修改。因此，Android 团队对修改优化Apache HTTP Client表现的并不积极。
      而HttpURLConnection，它的API简单，体积较小，因而非常适用于Android项目。压缩和缓存机制可以有效地减少网络访问的流量，在提升速度和省电方面也起到了较大的作用。
      所以，Android2.3及以上版本建议选用HttpURLConnection，

内存泄露如何查看和解决
概念：有些对象只有有限的生命周期，当他们的任务完成之后，它们将被垃圾回收，如果在对象的生命周期本该结束的时候，这个对象还被一系列的引用，着就会导致内存泄露。
解决方法：使用开源框架LeakCanary检测针对性解决
常见的内存泄露有：
单例造成的内存泄露，例如单例中的Context生命周期大于本身Context生命周期
线程使用Hander造成的内存卸扣，当activity已经结束，线程依然在运行更新UI
非静态类使用静态变量导致无法回收释放造成泄露
WebView网页过多造成内存泄露
资源未关闭造成泄露，例如数据库使用完之后关闭连接

滑动冲突如何解决？
滑动冲突分为同方向滑动冲突，例如ScrollView和ListView，同方向滑动冲突，可以计算ListView高度而动态设置ListView的高度，ScrollView高度可变。例如ViewPager和ListView,不同方向滑动冲突，一个是横向滑动一个是竖直滑动，不同方向滑动可以判断滑动的x，y轴是横向还是竖直滑动，如果判断得到是横向滑动，就拦截ListView的事件，竖则反之。

