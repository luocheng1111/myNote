

ViewPager
----------------------------------------------------------------------------------------------------------------------------------------

 ※ 介绍
    可以使视图滑动，就像Launcher左右滑动那样


 ※ ViewPagerd的简单实现
    思路
     1.xml中定义ViewPager
      <android.support.v4.view.ViewPager
      android:id="@+id/viewpager"
      android:layout_width="match_parent"
      android:layout_height="match_parent"/>

    2.把要实现的view加到一个集合里面
      ViewPager viewPager = (ViewPager) findViewById(R.id.viewpager);
      viewList.add(LayoutInflater.from(this).inflate(R.layout.layout2, null);
      ...
      viewPager.setAdapter(new MyAdapter(viewList));


    3.自定义类实现PagerAdapter，填充显示数据
     class MyAdapter extends PagerAdapter {

      // 显示多少个页面
      @Override
      public int getCount() {
          return 5;
      }

      @Override
      public boolean isViewFromObject(View view, Object object) {
          return view == object;
      }

      // 初始化显示的条目对象
      @Override
      public Object instantiateItem(ViewGroup container, int position) {
          // return super.instantiateItem(container, position);
          // 准备显示的数据，一个简单的TextView
          TextView tv = new TextView(MainActivity.this);
          tv.setGravity(Gravity.CENTER);
          tv.setTextSize(20);
          tv.setText("我是天才" + position + "号");

          // 添加到ViewPager容器
          container.addView(tv);

          // 返回填充的View对象
          return tv;
      }

      // 销毁条目对象
      @Override
      public void destroyItem(ViewGroup container, int position, Object object) {
          // super.destroyItem(container, position, object);
          container.removeView((View) object);
      }
     }


 ※ ViewPager的Adapter
   1.PagerAdapte
      滑动时动态加载和删除View，ViewPager其实只会维持2到3个View
   2.FragmentPagerAdapter  http://blog.csdn.net/dreamzml/article/details/9951577
      继承自PagerAdapter，该类的每一个生成的Fragment都将保存在内存之中，因此适合那些相对静态的页，数量较少的那种
      用到FragmentPagerAdapter必须重写2个方法 getItem()和getCount()
   3.FragmentStatePagerAdapter
      继承自 PagerAdapter，他只保留当前页面，当页面离开视线后，就会被消除，释放其资源
      这么实现的好处就是当拥有大量的页面时，不必在内存中占用大量的内存。


 ※ ViewPager的滑动监听
    viewPager.setOnPageChangeListener(new PageChangeListener());
    里面有3个方法：
    onPageScrollStateChanged(int arg0)；
    onPageSelected(int currentItem)；//此方法代表已切换到另一页面。
    onPageScrolled(int position, float positionOffset, int positionOffsetPixels)；
        //position：当前页位置
	//positionOffset：滑动到下一页，[0,1)区间上变化；滑动到上一页：(1,0]区间上变化
	//positionOffsetPixels：滑动到下一页，[0,宽度)区间上变化；滑动到上一页：(宽度,0]区间上变化



 ※ 解决ViewPager刷新无效的问题
    public class GiftViewPagerAdapter extends PagerAdapter {
      ....
      ....
      @Override
      public void destroyItem(ViewGroup container, int position, Object view) {
         //container.removeView(list.get(position));
         ((ViewPager) container).removeView((View) view);
      }

      public int getItemPosition(Object object) {
         return POSITION_NONE;
      }

    }

 ※ 遇到的坑
    1.当ViewPager中的多个Item共用一个Fragment, 而Fragment里面也是ViewPager时, 其他页面显示空白
      解决:给公共Fragment中的ViewPager加id,用于区别Fragment
           viewpager.setAdapter(adapter = new MyTaskAdapter(getActivity().getSupportFragmentManager(), pageFragementList, pageTitleList));
           viewpager.setId(fragmentTag);





 ◆ 参考
     http://blog.csdn.net/wangjinyu501/article/details/8169924
     https://github.com/PingerOne/ViewPagerDemo

----------------------------------------------------------------------------------------------------------------------------------------



TabPageIndicator
----------------------------------------------------------------------------------------------------------------------------------------
 ◆ 牛人笔记
     http://blog.csdn.net/xiaanming/article/details/10766053

 ※ 介绍 demo见 TabPageIndicatorStudyDemo
    TabPageIndicator是ViewPagerIndicator开源控件系列中的一个，配合Viewpager使用，其git为 https://github.com/JakeWharton/Android-ViewPagerIndicator

 ※ 使用
    TabPageIndicator indicator = (TabPageIndicator)findViewById(R.id.indicator);
    indicator.setViewPager(pager);


    如果要自定义，则在xml下面改, 且在Activity里面引用Theme。

----------------------------------------------------------------------------------------------------------------------------------------



Gallery(已过时)
----------------------------------------------------------------------------------------------------------------------------------------
 ※ 介绍
    Gallery已过时，2.2以上版本 HorizontalScrollView取代Gallery，原因是Gallery每次切换图片时都要新建视图，造成太多的资源浪费。
    用法和Listview一样，只是他呈现的是画廊的样式而已。也是setAdapter();


 ※ 用法
    见GalleryStudyDemo

----------------------------------------------------------------------------------------------------------------------------------------

