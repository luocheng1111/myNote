

DeawerLayout 侧滑菜单
----------------------------------------------------------------------------------------------------------------------------------

※ 介绍
   Android V7包中的控件，使用DrawerLayout可以轻松实现侧滑菜单的效果，大多数情况下与ToolBar配合使用


※ 使用
    1.布局中 添加：
      <android.support.v7.widget.Toolbar
        ... />

      <android.support.v4.widget.DrawerLayout
        android:id="@+id/dl_left"
        android:layout_width="match_parent"
        android:layout_height="match_parent">
        <!--主布局-->
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:gravity="center"
            android:orientation="vertical">

            .....
        </LinearLayout>

        <!--侧滑菜单1-->
        <LinearLayout
            android:id="@+id/ll"
            android:layout_width="100dp"  //这个值决定了侧滑菜单的宽度
            android:layout_height="match_parent"
            android:layout_gravity="start" //这个值决定了是左滑菜单 只有两个值start和end 对应左滑还是右滑
	    android:clickable="true"  //防止事件穿透
            android:background="#fff">

           .....
        </LinearLayout>

        <!--侧滑菜单2 -->
        <LinearLayout
            android:id="@+id/ll1"
            android:layout_width="100dp"
            android:layout_height="match_parent"
            android:layout_gravity="end"
	    android:clickable="true"  //防止事件穿透
            android:background="#fff">

            .....
        </LinearLayout>
       </android.support.v4.widget.DrawerLayout>

    2.关联DrawerLayout和Toolbar，添加监听
      //创建菜单控制开关监听，关联toolbar 固定写法 最后两个值是标记，没啥实际意义 可以填入0
      mDrawerToggle = new ActionBarDrawerToggle(this, mDrawerLayout, toolbar, 0, 0) {
            @Override
            public void onDrawerOpened(View drawerView) {
                super.onDrawerOpened(drawerView);
            }
            @Override
            public void onDrawerClosed(View drawerView) {
                super.onDrawerClosed(drawerView);
            }
       };

      //关联监听
      mDrawerLayout.addDrawerListener(mDrawerToggle);

    3.添加侧滑菜单的设置(官方建议此写法)
    @Override
    protected void onPostCreate(@Nullable Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        mDrawerToggle.syncState();
    }

    @Override
    public void onConfigurationChanged(Configuration newConfig) {
        super.onConfigurationChanged(newConfig);
        mDrawerToggle.onConfigurationChanged(newConfig);
    }

    4.代码控制侧滑菜单开关
    public void onClick(View v){
        if(mDrawerLayout.isDrawerOpen(drawLayout)){
            mDrawerLayout.closeDrawer(drawLayout);
        }else {
            mDrawerLayout.openDrawer(drawLayout);
        }
    }


※ 2种效果
  1.如果想让侧滑菜单位于Toolbar下面，则布局时，侧滑菜单布局到Toolbar下面
  2.如果想让侧滑菜单包含Toolbar，则布局时，Toolbar包含在Drawerlayout里面


※ 注意点：
   1.DrawerLayout 点击空白区域会事件穿透
     解决方法是：在DrawerLayout的侧栏布局中加clickable=true
   2.取消DrawerLayout滑出时内容区（Content）域遮罩效果：
     mDrawerLayout.setScrimColor(Color.TRANSPARENT);
   3.取消DrawerLayout滑出时菜单区（Menu）边缘阴影效果：
     mDrawerLayout.setDrawerShadow(R.drawable.drawer_shadow, GravityCompat.START);


※ 参考
   https://blog.csdn.net/student9128/article/details/53247491


※ Demo位置：/Demo/DrawLayout-侧滑菜单.zip


----------------------------------------------------------------------------------------------------------------------------------
