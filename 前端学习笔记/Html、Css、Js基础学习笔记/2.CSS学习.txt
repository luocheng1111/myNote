
----------------------------------------------------------------------------------------------------------------------------------------

※ CSS介绍
   CSS 指层叠样式表 (Cascading Style Sheets)，通过使用CSS，我们可以将内容与表现分离出来，外部样式表可极大的提高工作效率，
   外部样式表通常存储在CSS文件中，同时也不会弄乱文档内容

※ 用法
  <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
  <html>
  <head>
    <style type="text/css">
       h1 {color: red;}
       p {margin-left: 20px;}
       body {background-image: url("images/back40.gif");}
    </style>
  </head>

  <body>
    <h1>This is a important heading</h1>
    <p>This is a important paragraph</p>
  </body>
  </html>

  规则：selector {declaration1; declaration2; ... declarationN }  //选择器通常是您需要改变样式的 HTML 元素
  例子：h1 {color:red;font-size:14px}


※ CSS的三种适用方式
  1.外部样式表：样式写在统一的CSS文件内，当样式需要应用于很多页面时，外部样式表将是理想的选择
    例子：<head>
           <link rel="stylesheet" type="text/css" href="mystyle.css" />
         </head>
  2.内部样式表：直接在<head>内编写
    例子：见上方
  3.内联样式：将表现和内容混杂在一起，不建议这种写法
    例子：<p style="color: sienna; margin-left: 20px">This is a paragraph</p>


※ 注意点
  1.如果是多重声明，则需要用；分开。例：p {text-align:center; color:red;}
  2.写法建议
    p {
      text-align:center;
      color:red;
    }
  3.虽然CSS对大小写不敏感，但还是建议使用小写
  4.如果值为若干单词，则要给值加引号 例：p {font-family: "sans serif";}
  5.如果多个选择器拥有相同的CSS，则可以进行分组声明
    h1,h2,h3,h4,h5,h6 {
       color: green;
    }


※ 学习
  CSS教程 https://www.w3school.com.cn/css/index.asp


----------------------------------------------------------------------------------------------------------------------------------------



CSS 选择器
----------------------------------------------------------------------------------------------------------------------------------------

※ 派生选择器
  比方说，你希望列表中的 strong 元素变为斜体字，而不是通常的粗体字，可以这样定义一个派生选择器 效果 https://www.w3school.com.cn/tiy/t.asp?f=csse_selector_descendant_1
  <html>
    <head>
      <style type="text/css">
        h1 b {color:red;}
      </style>
    </head>

    <body>
      <h1>This is a <b>important</b> heading</h1>
      <p>This is a <b>important</b> paragraph.</p>
    </body>
  </html>
  //则只会h1里面的em有效果  b是变粗效果


※ id 选择器
  <html>
    <head>
      <style type="text/css">
        h1#abc {color:red;}
      </style>
    </head>

    <body>
      <h1 id="abc">这个段落是红色。</h1>
      <p id="abc">这个段落是绿色。</p>
    </body>
  </html>
  //1.如果写成#red 则id="abc"都会有效果
    2.如果写成h1#red 则只有id="abc"且<h1>才有效果


※ 类Class 选择器
  <html>
    <head>
      <style type="text/css">
        p.center {text-align: center}
      </style>
    </head>

    <body>
      <h1 class="center">这个段落是红色。</h1>
      <p class="center">这个段落是绿色。</p>
    </body>
  </html>
  //1.如果写成.center 则class="center"都会有效果
    2.如果写成p.center 则只有class="center"且<p>才有效果


※ 属性 选择器
  只对特定的字段适用样式
  1.对包含了标题title的属性的标签适用属性
    <head>
      <style type="text/css">
        [title]{color:red;}
      </style>
    </head>

    <body>
      <h1 title="Hello world">Hello world</h1>
      <a title="W3School" href="http://w3school.com.cn">W3School</a>
      <h2>无法应用样式：</h2>
    </body>

  2.对设置了title="W3School"的属性适用属性
    [title=W3School]{border:5px solid blue;}

  3.对<input>标签type="text" 适用属性
    input[type="text"]
    {
       width:150px;
       display:block;
       margin-bottom:10px;
       background-color:yellow;
       font-family: Verdana, Arial;
    }

  4.匹配多种属性
    a[href][title] {color:red;}  // 降href 和 title 属性的 HTML 超链接的文本设置为红色


  5.自己创造属性匹配
    img[alt] {border: 5px solid red;} //可以对所有带有 alt 属性的图像应用样式，从而突出显示这些有效的图像：

  更多用法见：https://www.w3school.com.cn/css/css_syntax_attribute_selector.asp

----------------------------------------------------------------------------------------------------------------------------------------



CSS 常见样式属性
----------------------------------------------------------------------------------------------------------------------------------------
 通用：
   设置背景颜色 background-color: gray;
   设置背景图片 background-image: url(/i/eg_bg_04.gif)
   设置宽、高   width、height   可用auto(默认),原本多大就多大，像素(30px)、百分比(比如50%，宽度为屏幕的50%大小)
   设置边距     margin 外边距  padding   内边距
   设置元素生成的框的类型   display
       none, 此元素不会被显示。不显示时不占据空间
       block，可以让行内元素（比如 <a> 元素）表现的像块元素一样，此元素将显示为块级元素，此元素前后会带有换行符。
       inline 默认。此元素会被显示为内联元素，元素前后没有换行符。 其他设置https://www.w3school.com.cn/css/pr_class_display.asp
       inline-block 行内块属性，我们有个时候既希望元素具有宽度高度特性，又具有同行特性，这个时候我们可以使用inline-block。一块一块的行内，这种情况下可以设置padding和高度
   设置是否显示 visibility  visible元素可见，hidden元素不可见 不显示时会占据空间
   设置透明度 (一般情况下2个一起用)
      opacity:0.4;  //IE9, Firefox, Chrome, Opera 和 Safari 使用属性 从 0.0 到 1.0。值越小，越透明。
      filter:alpha(opacity=40); /* 针对 IE8 以及更早的版本 * x 能够取的值从 0 到 100。值越小，越透明。

 字体系列
   设置字体大小  font-size:14px
   设置字体颜色  color:red {color:red} {color:#00ff00} {color:rgb(0,0,255)}
   设置字体样式  font-family:"Times New Roman"
   设置字体粗细  font-weight:400   取值100 ~ 900 值越大越粗  400 等价于 normal，而 700 等价于 bold
   设置文本对齐  text-align 可以设置center、left、right  注：仅是横向居中， 如果要设置竖向居中见下方例子


 边框系列
    border-width: 边宽
    border-color:边框颜色
    border-style: 边框样式 CSS定义了10个不同的边框样式，具体见https://www.w3school.com.cn/cssref/pr_border-style.asp


 背景系列属性：https://www.w3school.com.cn/css/css_background.asp
 文本系列属性：https://www.w3school.com.cn/css/css_text.asp

----------------------------------------------------------------------------------------------------------------------------------------



CSS 文本顶部横向居中、垂直居中、文本居中
----------------------------------------------------------------------------------------------------------------------------------------

//文本顶部横向居中
.btn{
    width: 650px;
    height: 90px;
    text-align: center;

    font-size: 36px;
    color: #FEFFFE;
    background-color: #ee0a24;
}

//文本垂直居中
.btn{
    width: 650px;
    height: 90px;
    line-height: 90px;  //line-height 属性设置行间的距离（行高）。不允许使用负值

    font-size: 36px;
    color: #FEFFFE;
    background-color: #ee0a24;
}

//文本居中
.btn{
    width: 650px;
    height: 90px;
    text-align: center;
    line-height: 90px;  //需要同时设置

    font-size: 36px;
    color: #FEFFFE;
    background-color: #ee0a24;
}

----------------------------------------------------------------------------------------------------------------------------------------



CSS 伪类 (Pseudo-classes)
----------------------------------------------------------------------------------------------------------------------------------------
 语法：selector : pseudo-class {property: value}
 注意：4个顺序最好不要颠倒，否则会出问题

 例：设置连接
  <style type="text/css">
     a:link {color: #FF0000}	/* 未访问的链接 */
     a:visited {color: #00FF00}	/* 已访问的链接 */
     a:hover {color: #FF00FF}	/* 鼠标移动到链接上 */
     a:active {color: #0000FF}	/* 选定的链接 */
  </style>

 例：不同状态下的背景
  <style type="text/css">
     a:link {background-color:#B2FF99;}
     a:visited {background-color:#FFFF85;}
     a:hover {background-color:#FF704D;}
     a:active {background-color:#FF704D;}
  </style>

 例：不同状态下的文本样式
  <style type="text/css">
     a:link {text-decoration:none;}
     a:visited {text-decoration:none;}
     a:hover {text-decoration:underline;}
     a:active {text-decoration:underline;}
  </style>


 伪元素的属性  https://www.runoob.com/css/css-pseudo-elements.html

----------------------------------------------------------------------------------------------------------------------------------------


CSS 定位与布局
----------------------------------------------------------------------------------------------------------------------------------------

定位：通过posttion属性设置位置
  static  默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right 或者 z-index 声明）
  absolute  绝对定位的元素的位置相对于最近的已定位的“父元素”，如果元素没有已定位的父元素，那么它的位置相对于<html>: 元素的位置通过 "left", "top", "right" 以及 "bottom" 属性进行规定。
  fixed  相对于浏览器窗口进行定位 元素的位置通过 "left", "top", "right" 以及 "bottom" 属性进行规定。 Fixed定位使元素的位置与文档流无关，因此不占据空间。Fixed定位的元素和其他元素重叠。
  relative 相对本身正常位置进行偏移和定位，原本所占的空间不会改变  因此，"left:20" 会向元素的 LEFT 位置添加 20 像素。



布局 通过float布局
 float浮动  https://www.runoob.com/try/try.php?filename=trycss_float2
  可以让元素的实现水平方向浮动，意味着元素只能左右移动而不能上下移动。有 left、right、none等值
  一个浮动元素会尽量向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。
  浮动元素之后的元素将围绕它。
  浮动元素之前的元素将不会受到影响。
  如果图像是右浮动，下面的文本流将环绕在它左边：
  浮动一般都要设置一个宽度width

 clear清除浮动 https://www.w3school.com.cn/tiy/t.asp?f=hdom_style_clear
  left	在左侧不允许浮动元素
  right	在右侧不允许浮动元素
  both	在左右两侧均不允许浮动元素
  none	默认。允许浮动元素出现在两侧。



display 设置元素的显示格式
       none, 此元素不会被显示。不显示时不占据空间
       block，可以让行内元素（比如 <a> 元素）表现的像块元素一样，此元素将显示为块级元素，此元素前后会带有换行符。
       inline 默认。此元素会被显示为内联元素，元素前后没有换行符。 其他设置https://www.w3school.com.cn/css/pr_class_display.asp
       inline-block 行内块属性，我们有个时候既希望元素具有宽度高度特性，又具有同行特性，这个时候我们可以使用inline-block。一块一块的行内，这种情况下可以设置padding和高度
设置是否显示 visibility  visible元素可见，hidden元素不可见 不显示时会占据空间

----------------------------------------------------------------------------------------------------------------------------------------


CSS3 Flex布局
----------------------------------------------------------------------------------------------------------------------------------------

※ 介绍
  布局的传统解决方案，是依赖块元素display+position属性+float属性。但对于一些特殊的布局特别不方便，比如，垂直居中就不容易实现
  2009年，W3C提出了一种新的方案-Flex布局，可以简单、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。
  Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。


※ 属性
  display: flex;
  flex-direction
  flex-wrap
  flex-flow
  justify-content
  align-items
  align-content

  flex-direction: row(默认) | row-reverse | column | column-reverse;
  决定主轴的方向，如果设置row，则主轴为横轴，纵轴为交叉轴，如果设置column，则主轴为纵轴，交叉轴为横轴

  justify-content: flex-start(默认) | flex-end | center | space-between | space-around;
  定义了项目在主轴上的对齐方式
  space-between：两端对齐，除了两端的子元素分别靠向两端的容器之外，其他子元素之间的间隔都相等
  space-around：每个子元素之间的距离相等，两端的子元素距离容器的距离也和其它子元素之间的距离相同
  主轴指的是父元素中的flex-direction属性指定的元素

  flex-wrap: nowrap(默认) | wrap | wrap-reverse;
  如果一条轴线上放不下，是否换行

  align-items: flex-start | flex-end | center | baseline | stretch;
  align-items属性定义项目在交叉轴上如何对齐

  flex-flow: <flex-direction> <flex-wrap>;
  flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。

  align-content: flex-start | flex-end | center | space-between | space-around | stretch;
  定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。- 只对多行的排列起作用



※ 写法
  <style>
   #main {
    width: 220px;
    height: 300px;
    border: 1px solid black;
    display: -webkit-flex; /* Safari */
    -webkit-align-items: center; /* Safari 7.0+ */
    display: flex;
  }
  //display和-webkit-align-items是为了和Safari兼容



※ 学习
  https://www.runoob.com/w3cnote/flex-grammar.html



----------------------------------------------------------------------------------------------------------------------------------------





CSS 的外边距合并
----------------------------------------------------------------------------------------------------------------------------------------

如果两个垂直margin相遇，则两个margin会取两个之间的最大值作为外边距 例子：https://www.w3school.com.cn/tiy/t.asp?f=csse_margin_collapsing1
比如  1个元素的margin-bottom:20px; 另外一个元素在他下面，margin-top:10px; 则两个元素之间的margin为20  而不是30
     1个元素的margin-bottom:20px; 另外一个元素在他下面，margin-top:0px; 则两个元素之间的margin为20
     1个元素的margin-bottom:20px; 另外一个元素在他下面，margin-top:30px; 则两个元素之间的margin为30  而不是50

这样的好处 https://www.w3school.com.cn/css/css_margin_collapsing.asp

----------------------------------------------------------------------------------------------------------------------------------------



经典练习案例
----------------------------------------------------------------------------------------------------------------------------------------

 https://www.w3school.com.cn/tiy/t.asp?f=csse_float6
 https://www.runoob.com/try/try.php?filename=trycss_float6

----------------------------------------------------------------------------------------------------------------------------------------


复习
----------------------------------------------------------------------------------------------------------------------------------------

1.介绍下CSS
2.CSS的基本写法 3'
3.CSS的选择器介绍 3'
4.说几个CSS的常见属性 3'
5.CSS伪类
6.CSS的定位与布局 4'+1'+2'+4'


----------------------------------------------------------------------------------------------------------------------------------------