


Webpack
----------------------------------------------------------------------------------------------------------------------------------------

※ Webpack介绍
  Webpack是一个前端资源加载/打包工具，Webpack可以把浏览器不能识别的东西如（less，scss）转换为浏览器可以识别的语言如（css）


※ Webpack的安装
  1.在安装 Webpack 前，你本地环境需要支持 node.js
  2.安装webpack cnpm install webpack -g


※ 使用webpack命令打包
  命令：webpack runoob1.js bundle.js
  执行以上命令会编译 runoob1.js 文件并生成bundle.js 文件
  例子见学习网址



※ webpack处理其他模块，比如css、style
  Webpack 本身只能处理 JavaScript 模块，如果要处理其他类型的文件，就需要使用 loader 进行转换。
  所以如果我们需要在应用中添加 css 文件，就需要使用到 css-loader 和 style-loader，
  他们做两件不同的事情，css-loader 会遍历 CSS 文件，然后找到 url() 表达式然后处理他们，style-loader 会把原来的 CSS 代码插入页面中的一个 style 标签中。
  css-loader 和 style-loader的安装
  cnpm install css-loader style-loader
  使用：webpack runoob1.js bundle.js --module-bind 'css=style-loader!css-loader'


※ webpack配置文件
  我们可以将一些编译选项放在配置文件中，以便于统一管理，
  当我们执行webpack命令时，它会默认载入 webpack.config.js 配置文件，配置文件如下所示
  module.exports = {
    entry: "./runoob1.js",
    output: {
        path: __dirname,
        filename: "bundle.js"
    },
    module: {
        loaders: [
            { test: /\.css$/, loader: "style-loader!css-loader" }
        ]
    }
  };


※ 配置文件的解释
  entry&output
  entry是配置webpack的入口文件，上面的代码中我们将app目录下的runoob1.js作为入口文件。webpack会将与entry.js有关的资源都进行打包。
  output是出口文件，即打包好的文件的存放地址和文件名。
  我们可以单文件，单输出，也可以多文件，多输出

  loaders:
  loader是webpack的加载器，可以帮我们处理各种非js文件。如css样式，vue、jsx、weex等后缀的代码，JPG、PNG图片等。
  所以我们一般会在package.json中看到各种***-loader。这些就是各类资源的loader加载器,
  test是正则表达式，用于搜索后缀为.js的文件。loader是所用加载器名称
  比如：
  style-loader和css-loader
  用于打包css/style样式
  例：{ test: /\.css$/, loader: "style-loader!css-loader" }

  url-loader和file-loader
  开发环境的时候图片路径好好的，怎么发布到线上就404了？？？或者说html里面引用的img路径是正确的，怎么到css里面路径404了？
  而上面两个loader可以解决此问题，这两个loader不仅可以处理图片，还可以处理音频，视频，字体等文件
  例：{  test: /\.(png|jpg|gif)$/, loader: 'file-loader'  }

  babel-loader
  将es6语法编译为es5等能被浏览器识别的语法
  例：{  test: /\.js$/, loader: 'babel', exclude: /node_modules(?!(\/|\\).*(weex).*)/ }

  sass-loader和node-sass 及less-loader
  因为sass-loader依赖于node-sass，所以安装sass-loader时需要通知安装node-sass
  sass和less都是css的扩展预言，如果用到了，则需要转换
  例：{  test: /\.less$/,  loader: 'style-loader!css-loader!less-loader' }
     {  test: /\.(scss|sass)$/,  loader: 'style-loader!css-loader!sass-loader' }

  vue-loader
  解析和转换.vue 文件，提取出其中的逻辑代码 script、样式代码 style、以及 HTML 模版 template，再分别把它们交给对应的 Loader 去处理，核心的作用，就是提
  例：{  test: /\.vue$/,  loader: 'vue-loader' }



※ 插件
  插件在 webpack 的配置信息 plugins 选项中指定，用于完成一些 loader 不能完成的工
  比如 BannerPlugin插件, 用于在文件头部输出一些注释信息
  修改 webpack.config.js，代码如下
  var webpack=require('webpack');

  module.exports = {
    entry: "./runoob1.js",
    output: {
        path: __dirname,
        filename: "bundle.js"
    },
    module: {
        loaders: [
            { test: /\.css$/, loader: "style-loader!css-loader" }
        ]
    },
    plugins:[
    new webpack.BannerPlugin('菜鸟教程 webpack 实例')
    ]
  };



※ 其他命令
  webpack --watch  如果不想每次修改模块后都重新编译，那么可以启动监听模式。开启监听模式后，没有变化的模块会在编译后缓存到内存中，而不会每次都被重新编译，所以监听模式的整体速度是很快的。



※ 学习
  https://www.runoob.com/w3cnote/webpack-tutorial.html
  https://www.jianshu.com/p/aef34acd111f


----------------------------------------------------------------------------------------------------------------------------------------

