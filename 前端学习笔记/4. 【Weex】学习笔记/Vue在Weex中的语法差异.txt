
1.“html标签”
目前 Weex 支持了基本的容器 (div)、文本 (text)、图片 (image)、视频 (video) 等组件，注意是组件，而不是标签，
虽然使用起来跟 html 标签很像，至于其他标签基本可以使用以上组件组合而成。


样式差异
Weex中的样式是由原生渲染器解析的，出于性能和功能复杂度的考虑，Weex对CSS的特性做了一些取舍
1.Weex 中只支持单个类名选择器，不支持关系选择器，也不支持属性选择器。
2.组件级别的作用域，为了保持 web 和 Native 的一致性，需要<style scoped>写法
3.支持了基本的盒模型和 flexbox 布局，详情可参考Weex 通用样式文档。但是需要注意的是，
  1.不支持display: none;可用opacity: 0;代替，（opacity<=0.01时，元素可点透）
  2.样式属性暂不支持简写（提高解析效率）比如
  3.flex 布局需要注意 web 的兼容性
  4.css 不支持 3D 变换

名存实亡的<标签/>
Weex 工程中常用的标签有<div />，<text />，<image />，<video />（组件另算）
由此四种标签基本可以满足绝大多数场景的需求，虽说此标签同 web 工程下的标签用法一致，
但此处的标签已不再是我们前端口中常提的 html 标签，而且名存实亡的 Weex 标签，确切讲是 Weex 组件。
通过weex-loader、vue-loader、weex-vue-render的解析最终转换输出的便是实际的组件，有此设计只是为了完成「web开发体验」的目标。
但是我们身为上层的开发人员要清楚自己每天「把玩」的到底是个什么「鬼」。



单位
Weex 中的所有 css 属性值的单位均为 px，也可省略不写，系统会默认为 px 单位。

选择器
Weex 中只支持单个类名选择器，不支持关系选择器，也不支持属性选择器。
/* 支持单个类名选择器 */
.one-class {
  font-size: 36px;
}
/* 不支持关系选择器 */
.parent > .child {
  padding-top: 10px;
}
/* 不支持属性选择器，不支持 `v-cloak` 指令 */
[v-cloak] {
  color: #FF6600;
}

这个只是对样式定义的限制，不影响样式类名的使用，在标签中可以添加多个样式类名，如：
<template>
  <div class="one two three"><div>
</template>


学习自：https://segmentfault.com/a/1190000011027225